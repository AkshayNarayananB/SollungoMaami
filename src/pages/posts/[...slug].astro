---
import { getCollection } from "astro:content";
import { IdToSlug } from "../../utils/hash";
import PostLayout from "../../layouts/PostLayout.astro";
import { render } from "astro:content";

export async function getStaticPaths() {
  const postEntries = await getCollection("posts");
  return postEntries.map((entry) => ({
    params: { slug: IdToSlug(entry.id) },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const { Content } = await render(entry);

// Generate slug for this post
const slug = IdToSlug(entry.id);
const pageUrl = `${Astro.url.origin}/posts/${slug}`;

// Conditionally set the license and banner image props
const licenseProp = entry.data.licenseName
  ? { name: entry.data.licenseName, url: entry.data.licenseUrl }
  : undefined;

const bannerImageProp = entry.data.licenseName ? entry.data.cover : entry.data.image;
---
<PostLayout
  title={entry.data.title}
  subTitle={entry.data.description}
  bannerImage={bannerImageProp}
  published={entry.data.published}
  license={licenseProp}
  author={entry.data.author}
  sourceLink={entry.data.sourceLink}
>
  <div class="hidden" data-pagefind-body data-pagefind-weight="10" data-pagefind-meta="title">
    {entry.data.title}
  </div>

  <div data-pagefind-body>
    <Content />
  </div>

  <section class="mt-10">
    <h2 class="text-xl font-bold mb-4"> Comments</h2>
    <div
      id="cusdis_thread"
      data-host="https://cusdis.com"
      data-app-id="7e04c8d6-9261-4adc-ace4-43d930a713e4"
      data-page-id={slug}
      data-page-url={pageUrl}
      data-page-title={entry.data.title}
    ></div>
    <script async defer src="https://cusdis.com/js/cusdis.es.js"></script>

    <script>
      function setCusdisTheme() {
        const isDarkMode = document.documentElement.classList.contains('dark');
        const cusdisThread = document.getElementById('cusdis_thread');
        if (cusdisThread) {
          cusdisThread.setAttribute('data-theme', isDarkMode ? 'dark' : 'light');
        }
      }

      function resizeCusdis() {
        const iframe = document.querySelector('#cusdis_thread iframe');
        if (iframe) {
          iframe.addEventListener('load', () => {
            const scrollHeight = iframe.contentWindow.document.body.scrollHeight;
            iframe.style.height = `${scrollHeight}px`;
          });
        }
      }
      
      // Set the theme on initial page load
      setCusdisTheme();
      // Initial resize on page load
      resizeCusdis();
      
      // Listen for changes to the `dark` class
      const observer = new MutationObserver(setCusdisTheme);
      observer.observe(document.documentElement, { attributes: true, attributeFilter: ['class'] });
      
      // Also handle Astro View Transitions
      document.addEventListener('astro:page-load', () => {
        setCusdisTheme();
        resizeCusdis();
      });
    </script>
  </section>
</PostLayout>
