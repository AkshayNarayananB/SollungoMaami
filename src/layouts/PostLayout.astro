---
import Main from "../layouts/MainLayout.astro";
import Markdown from "../components/Markdown.astro";
import CopyRight from "../components/misc/CopyRight.astro";

interface Props {
  title?: string;
  subTitle?: string;
  bannerImage?: string;
  published?: Date;
  license?: { name: string; url?: string };
  image?: string;
  author?: string;
  sourceLink?: string;
}

const {
  title,
  subTitle,
  bannerImage,
  published,
  license,
  author,
  sourceLink,
  image,
} = Astro.props;

const blogId = Astro.url.pathname.replace(/^\/|\/$/g, "");

---

<Main title={title} subTitle={subTitle}>
  <div class="article-wrapper">
    <div class="article">
      <Markdown>
        <slot />
      </Markdown>

      {published && title && (
        <CopyRight
          title={title}
          published={published}
          license={license}
          author={author}
          sourceLink={sourceLink}
        />
      )}

      <!-- Comments Section -->
      <section id="comments-section" class="mt-8">
        <h2 class="text-xl font-bold mb-4">Comments</h2>
        <div id="comments-list" class="space-y-4"></div>

        <h3 class="text-lg font-semibold mt-6">Leave a Comment</h3>
        <form id="comment-form" class="space-y-2">
          <textarea name="comment" placeholder="Write your comment..." required class="w-full p-2 rounded border"></textarea>
          <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Submit</button>
        </form>
      </section>
    </div>
  </div>
</Main>

<script is:client>
const form = document.getElementById("comment-form");
const commentsList = document.getElementById("comments-list");
const blogId = window.location.pathname.replace(/^\/|\/$/g, "");

async function loadComments() {
  try {
    const res = await fetch(`/api/comments?blogId=${encodeURIComponent(blogId)}`);
    if (!res.ok) throw new Error(`GET failed: ${res.status}`);
    const data = await res.json();

    commentsList.innerHTML = "";
    data.forEach(row => {
      const commentEl = document.createElement("div");
      commentEl.classList.add("p-3", "bg-gray-100", "rounded");
      commentEl.innerHTML = `
        <p>${row.comment}</p>
        ${row.reply ? `<div class="ml-4 mt-2 p-2 bg-gray-200 rounded text-sm text-gray-700">Reply: ${row.reply}</div>` : ""}
      `;
      commentsList.appendChild(commentEl);
    });
  } catch (err) {
    console.error("Error loading comments:", err);
  }
}

form.addEventListener("submit", async (e) => {
  e.preventDefault();
  const comment = form.querySelector('textarea[name="comment"]').value;

  try {
    const res = await fetch("/api/comments", {
      method: "POST",
      headers: { "Content-Type": "application/json" },
      body: JSON.stringify({ blogId, comment })
    });

    if (!res.ok) throw new Error(`POST failed: ${res.status}`);
    const result = await res.json();

    alert("Your comment has been submitted for approval.");
    form.reset();
    loadComments();
  } catch (err) {
    console.error("Error submitting comment:", err);
    alert("Failed to submit comment. Check console for details.");
  }
});

loadComments();
</script>
