---
// Props
interface Props {
  slug: string;
}

const { slug } = Astro.props;
import { supabase } from '../db/supabase';
---

<section id="comments-section" class="mt-8">
  <h2 class="text-xl font-bold mb-4">Comments</h2>
  <div id="comments-list" class="space-y-4"></div>

  <h3 class="text-lg font-semibold mt-6">Leave a Comment</h3>
  <form id="comment-form" class="space-y-2">
    <textarea
      name="comment"
      placeholder="Write your comment..."
      required
      class="w-full p-2 rounded border"
    ></textarea>
    <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">
      Submit
    </button>
  </form>
</section>

<script is:client>
import { supabase } from '../db/supabase';

const form = document.getElementById('comment-form');
const commentsList = document.getElementById('comments-list');
const blogSlug = Astro.props.slug;

// Load comments
async function loadComments() {
  try {
    const { data, error } = await supabase
      .from('Comments') // Match your table name exactly (case-sensitive)
      .select('*')
      .eq('slug', blogSlug)
      .eq('approved', true)
      .order('timestamp', { ascending: true });

    if (error) throw error;

    commentsList.innerHTML = '';
    data.forEach(row => {
      const el = document.createElement('div');
      el.className = 'p-3 bg-gray-100 rounded';
      el.innerHTML = `
        <p>${row.comment}</p>
        ${row.reply ? `<div class="ml-4 mt-2 p-2 bg-gray-200 rounded text-sm text-gray-700">Reply: ${row.reply}</div>` : ''}
      `;
      commentsList.appendChild(el);
    });
  } catch (err) {
    console.error('Error loading comments:', err);
  }
}

// Handle form submission
form.addEventListener('submit', async e => {
  e.preventDefault();

  const textarea = form.querySelector('textarea[name="comment"]');
  const comment = textarea.value.trim();
  if (!comment) return;

  try {
    const { data, error } = await supabase
      .from('Comments') // Case-sensitive
      .insert([{ slug: blogSlug, comment, approved: false }]); // moderation

    if (error) throw error;

    alert('Your comment has been submitted for approval.');
    textarea.value = '';
    loadComments();
  } catch (err) {
    console.error('Error submitting comment:', err);
    alert('Failed to submit comment.');
  }
});

// Initial load
loadComments();
</script>
