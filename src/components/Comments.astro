---
// src/components/Comments.astro
const { slug } = Astro.props;
---
<section class="comments-section" data-slug={slug}>
  <h2 class="text-xl font-bold mb-4">Comments</h2>
  <div class="comments-list space-y-4"></div>

  <h3 class="text-lg font-semibold mt-6">Leave a Comment</h3>
  <form class="comment-form space-y-2">
    <textarea
      name="comment"
      placeholder="Write your comment..."
      required
      class="w-full p-2 rounded border"
    ></textarea>
    <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">
      Submit
    </button>
  </form>
</section>

<script is:client>
import { db } from '../db/firebase';
import { collection, addDoc, query, orderBy, onSnapshot } from 'firebase/firestore';

document.addEventListener('DOMContentLoaded', () => {
  const section = document.querySelector('.comments-section');
  const slug = section.dataset.slug;

  const commentsList = section.querySelector('.comments-list');
  const form = section.querySelector('.comment-form');

  const commentsRef = collection(db, 'comments_' + slug);

  // ðŸ”¹ Real-time listener
  const q = query(commentsRef, orderBy('timestamp', 'asc'));
  onSnapshot(q, (snapshot) => {
    commentsList.innerHTML = '';
    snapshot.forEach(doc => {
      const data = doc.data();
      const div = document.createElement('div');
      div.className = 'p-3 bg-gray-100 rounded';
      div.innerHTML = `<p>${data.comment}</p>`;
      commentsList.appendChild(div);
    });
  });

  // ðŸ”¹ Handle form submission
  form.addEventListener('submit', async (e) => {
    e.preventDefault();
    const textarea = form.querySelector('textarea');
    const comment = textarea.value.trim();
    if (!comment) return;

    try {
      await addDoc(commentsRef, {
        comment,
        timestamp: new Date()
      });
      textarea.value = '';
    } catch (err) {
      console.error('Error adding comment:', err);
      alert('Failed to submit comment.');
    }
  });
});
</script>
