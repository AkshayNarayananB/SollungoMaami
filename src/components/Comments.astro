<!-- Comments.astro -->
<section id="comments-section" class="mt-8">
  <h2 class="text-xl font-bold mb-4">Comments</h2>
  <div id="comments-list" class="space-y-4"></div>

  <h3 class="text-lg font-semibold mt-6">Leave a Comment</h3>
  <form id="comment-form" class="space-y-2">
    <textarea
      name="comment"
      placeholder="Write your comment..."
      required
      class="w-full p-2 rounded border"
    ></textarea>
    <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">
      Submit
    </button>
  </form>
</section>

<script is:client>
import { createClient } from "@supabase/supabase-js";

// Initialize Supabase client in the browser only
const supabase = createClient(
  import.meta.env.PUBLIC_SUPABASE_URL,
  import.meta.env.PUBLIC_SUPABASE_ANON_KEY
);

const blogId = Astro.props.slug; // or get from path if not passed
const form = document.getElementById("comment-form");
const commentsList = document.getElementById("comments-list");

async function loadComments() {
  const { data, error } = await supabase
    .from("comments")
    .select("*")
    .eq("slug", blogId)
    .eq("approved", true)
    .order("timestamp", { ascending: true });
  if (error) return console.error(error);

  commentsList.innerHTML = "";
  data.forEach((row) => {
    const el = document.createElement("div");
    el.className = "p-3 bg-gray-100 rounded";
    el.innerHTML = `
      <p>${row.comment}</p>
      ${row.reply ? `<div class="ml-4 mt-2 p-2 bg-gray-200 rounded text-sm text-gray-700">Reply: ${row.reply}</div>` : ""}
    `;
    commentsList.appendChild(el);
  });
}

form.addEventListener("submit", async (e) => {
  e.preventDefault();
  const comment = form.querySelector("textarea").value.trim();
  if (!comment) return;

  const { error } = await supabase.from("comments").insert([{ slug: blogId, comment, approved: false }]);
  if (error) return console.error(error);

  alert("Comment submitted for approval");
  form.reset();
  loadComments();
});

loadComments();
</script>
