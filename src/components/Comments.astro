---
// src/components/Comments.astro
const { slug } = Astro.props;
import { db } from '../db/firebase';
import {
  collection,
  addDoc,
  query,
  orderBy,
  onSnapshot
} from 'firebase/firestore';
---

<section class="comments-section">
  <h2 class="text-xl font-bold mb-4">Comments</h2>
  <div id="comments-list" class="space-y-4"></div>

  <h3 class="text-lg font-semibold mt-6">Leave a Comment</h3>
  <form id="comment-form" class="space-y-2">
    <textarea name="comment" placeholder="Write your comment..." required class="w-full p-2 rounded border"></textarea>
    <button type="submit" class="bg-blue-600 text-white px-4 py-2 rounded">Submit</button>
  </form>
</section>

<script is:client>
import { db } from '../db/firebase';
import { collection, addDoc, query, orderBy, onSnapshot } from 'firebase/firestore';

const slug = Astro.props.slug;
const commentsList = document.getElementById('comments-list');
const form = document.getElementById('comment-form');

// Reference to comments collection for this post
const commentsRef = collection(db, 'comments_' + slug);

// Real-time listener
const q = query(commentsRef, orderBy('timestamp', 'asc'));
onSnapshot(q, (snapshot) => {
  commentsList.innerHTML = '';
  snapshot.forEach(doc => {
    const data = doc.data();
    const div = document.createElement('div');
    div.className = 'p-3 bg-gray-100 rounded';
    div.innerHTML = `<p>${data.comment}</p>`;
    commentsList.appendChild(div);
  });
});

// Handle submission
form.addEventListener('submit', async (e) => {
  e.preventDefault();
  const comment = form.comment.value.trim();
  if (!comment) return;

  await addDoc(commentsRef, {
    comment,
    timestamp: new Date()
  });

  form.reset();
});
</script>
